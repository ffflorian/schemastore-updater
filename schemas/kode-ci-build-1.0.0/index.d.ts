/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type BranchMatcher = string;

export interface KoDECIBuildSpec {
  on?: BuildCondition;
  /**
   * 실행할 작업들: 독립적으로 병렬 실행됨
   */
  jobs: Job[];
  /**
   * 환경변수
   */
  environment?: Env[];
}
/**
 * 실행 조건
 */
export interface BuildCondition {
  /**
   * Push 이벤트에 의한 조건
   */
  push?: {
    /**
     * Push로 빌드를 실행할 브랜치
     *
     * @minItems 1
     */
    branches?: [BranchMatcher, ...BranchMatcher[]];
  };
  [k: string]: unknown | undefined;
}
export interface Job {
  /**
   * 작업 이름
   */
  name: string;
  /**
   * 실행할 명령 목록(순차실행)
   *
   * @minItems 1
   */
  execute: [string, ...string[]];
  /**
   * 사내 Proxy 설정
   */
  "set-proxy"?: ("shell" | "gradle" | "npm" | "docker" | "yarn" | "maven")[];
  "run-on"?: RunOn;
  /**
   * artifact로 지정할 파일 혹은 디렉토리 경로
   */
  artifacts?: string[];
  /**
   * 다음 빌드의 속도 향상을 위한 캐시 설정
   */
  caches?: {
    /**
     * 캐시 식별키 (repo scope)
     */
    key?: string;
    /**
     * 캐시할 파일 혹은 디렉토리 경로
     */
    path?: string;
  }[];
  /**
   * 최대 실행시간 (e.g. '1h', '100m')
   */
  "max-execution-time"?: string;
  /**
   * 빌드 후처리기 설정
   */
  "post-process"?: {
    "app-center-release"?: AppCenterRelease;
    "git-ops"?: GitOps;
    [k: string]: unknown | undefined;
  };
  [k: string]: unknown | undefined;
}
/**
 * 실행환경 설정
 */
export interface RunOn {
  /**
   * docker image
   */
  image?: string;
  /**
   * 실행에 사용할 리소스 크기 설정
   */
  resources?:
    | ("small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge")
    | {
        /**
         * cpu (e.g. '1.0')
         */
        cpu: string | number;
        /**
         * memory (e.g. '500Mi', '2Gi').
         */
        memory: string;
        [k: string]: unknown | undefined;
      };
  /**
   * 실행환경에서 사용할 기능 설정
   */
  use?: ("docker" | "mobil-keystore")[];
}
/**
 * artifact로 지정된 .apk/.ipa 파일을 appcenter로 릴리즈
 */
export interface AppCenterRelease {
  /**
   * App ID
   */
  "app-id": string;
  /**
   * 릴리즈 그룹에 대한 Tag 지정
   */
  "release-group-tag": string;
  /**
   * 테스터 지정(@<user>, @@<group>, corp@@<corpcode>)
   */
  testers?: string[];
  [k: string]: unknown | undefined;
}
/**
 * GitOps 방식의 K8S Deploy를 위한 manifest repo 업데이트
 */
export interface GitOps {
  /**
   * K8S manifest repo 정보
   */
  manifest: {
    /**
     * repo('owner/repo')
     */
    repo: string;
    /**
     * branch
     */
    branch: string;
  };
  /**
   * manifest repo를 업데이트하기 위한 명령
   *
   * @minItems 1
   */
  update: [string, ...string[]];
  /**
   * 빌드 작업에서 manifest reop로 전달할 artifacts
   */
  "with-artifacts"?: string[];
}
export interface Env {
  /**
   * 환경변수 이름
   */
  name: string;
  /**
   * 환경변수 값
   */
  value: string;
  /**
   * 환경변수를 적용할 브랜치
   */
  branch?: string;
}
