/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type SwaggerToTypeScriptClient = SwaggerToTypeScriptClient1 & {
  template?: "JQueryCallbacks" | "JQueryPromises" | "AngularJS" | "Angular" | "Fetch" | "Aurelia";
  promiseType?: "Promise" | "QPromise";
  wrapDtoExceptions?: boolean;
  clientBaseClass?: string;
  configurationClass?: string;
  useTransformOptionsMethod?: boolean;
  useTransformResultMethod?: boolean;
  baseUrlTokenName?: string;
  protectedMethods?: string[];
  importRequiredTypes?: boolean;
  useGetBaseUrlMethod?: boolean;
  queryNullValue?: string;
  httpClass?: "Http" | "HttpClient";
  rxJsVersion?: number;
  useSingletonProvider?: boolean;
  injectionTokenType?: "OpaqueToken" | "InjectionToken";
  markOptionalProperties?: boolean;
  typeScriptVersion?: number;
  moduleName?: string;
  nullValue?: string;
  typeStyle?: "Interface" | "Class" | "KnockoutClass";
  [k: string]: unknown | undefined;
};
export type SwaggerToTypeScriptClient1 = ClientGenerator;
export type SwaggerToCSharpClient = SwaggerToCSharpClient1 & {
  [k: string]: unknown | undefined;
};
export type SwaggerToCSharpClient1 = ClientGenerator;
export type SwaggerToCSharpController = unknown;

export interface Nswag {
  swaggerGenerator?: SwaggerGenerator;
  codeGenerators?: CodeGenerators;
  [k: string]: unknown | undefined;
}
export interface SwaggerGenerator {
  webApiToSwagger?: WebApiToSwagger;
  [k: string]: unknown | undefined;
}
export interface WebApiToSwagger {
  assemblyPaths?: string[];
  referencePaths?: string[];
  useNuGetCache?: boolean;
  isAspNetCore?: boolean;
  controllerNames?: string[];
  defaultUrlTemplate?: string;
  defaultPropertyNameHandling?: "Default" | "CamelCase" | "SnakeCase";
  defaultEnumHandling?: "Integer" | "String" | "CamelCaseString";
  flattenInheritanceHierarchy?: boolean;
  generateKnownTypes?: boolean;
  generateXmlObjects?: boolean;
  addMissingPathParameters?: boolean;
  infoTitle?: string;
  infoVersion?: string;
  output?: null;
  [k: string]: unknown | undefined;
}
export interface CodeGenerators {
  swaggerToTypeScriptClient?: SwaggerToTypeScriptClient;
  swaggerToCSharpClient?: SwaggerToCSharpClient;
  swaggerToCSharpController?: SwaggerToCSharpController;
  [k: string]: unknown | undefined;
}
export interface ClientGenerator {
  namespace?: string;
  dateTimeType?: string;
  wrapDtoExceptions?: boolean;
  operationGenerationMode?:
    | "MultipleClientsFromOperationId"
    | "MultipleClientsFromPathSegments"
    | "SingleClientFromOperationId"
    | "SingleClientFromPathSegments";
  generateCloneMethod?: boolean;
  generateDefaultValues?: boolean;
  excludedTypeNames?: string[];
  handleReferences?: boolean;
  generateConstructorInterface?: boolean;
  importRequiredTypes?: string;
  baseUrlTokenName?: string;
  output?: unknown;
  className?: string;
  generateDtoTypes?: boolean;
  generateClientInterfaces?: boolean;
  generateClientClasses?: boolean;
  generateOptionalParameters?: boolean;
  wrapResponses?: boolean;
  wrapResponseMethods?: string[];
  generateResponseClasses?: boolean;
  responseClass?: string;
  [k: string]: unknown | undefined;
}
