/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForCSSCombConfigurationFiles {
  /**
   * An array of files/globbing patterns to ignore
   */
  exclude?: string[];
  verbose?: boolean;
  "always-semicolon"?: boolean;
  /**
   * Whether to add a semicolon after the last value/mixin.
   */
  "block-indent"?: string;
  /**
   * Unify case of hexadecimal colors.
   */
  "color-case"?: "lower" | "upper";
  /**
   * Whether to expand hexadecimal colors or use shorthands.
   */
  "color-shorthand"?: boolean;
  /**
   * Unify case of element selectors.
   */
  "element-case"?: "lower" | "upper";
  /**
   * Add/remove line break at EOF.
   */
  "eof-newline"?: boolean;
  /**
   * Add/remove leading zero in dimensions.
   */
  "leading-zero"?: boolean;
  /**
   * Unify quotes style.
   */
  quotes?: "single" | "double";
  /**
   * Remove all rulesets that contain nothing but spaces.
   */
  "remove-empty-rulesets"?: boolean;
  /**
   * Set space after `:` in declarations.
   */
  "space-after-colon"?: string;
  /**
   * Set space after combinator (for example, in selectors like `p > a`).
   */
  "space-after-combinator"?: string;
  /**
   * Set space after `{`.
   */
  "space-after-opening-brace"?: string;
  /**
   * Set space after selector delimiter.
   */
  "space-after-selector-delimiter"?: string;
  /**
   * Set space before `}`.
   */
  "space-after-closing-brace"?: string;
  /**
   * Set space before `:` in declarations.
   */
  "space-before-colon"?: string;
  /**
   * Set space before combinator (for example, in selectors like `p > a`).
   */
  "space-before-combinator"?: string;
  /**
   * Set space before `{`.
   */
  "space-before-opening-brace"?: string;
  /**
   * Set space before selector delimiter.
   */
  "space-before-selector-delimiter"?: string;
  /**
   * Set space between declarations (i.e. `color: tomato`).
   */
  "space-between-declarations"?: string;
  /**
   * Whether to trim trailing spaces.
   */
  "strip-spaces"?: boolean;
  /**
   * Whether to remove units in zero-valued dimensions.
   */
  "unitless-zero"?: boolean;
  /**
   * Whether to align prefixes in properties and values.
   */
  "vendor-prefix-align"?: boolean;
  /**
   * Sort properties in particular order.
   */
  "sort-order"?: string[][];
  "tab-size"?: boolean;
  /**
   * Sort unknown properties alphabetically
   */
  "sort-order-fallback"?: "abc";
  [k: string]: any;
}
