/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForCirrusCIConfigurationFiles {
  /**
   * Boolean expression that can use environment variables.
   */
  allow_failures?: string;
  /**
   * Boolean expression that can use environment variables.
   */
  auto_cancellation?: string;
  aws_credentials?: string;
  /**
   * Azure Container Instance definition.
   */
  azure_container_instance?: {
    cpu?: number;
    /**
     * Docker Image.
     */
    image?: string;
    memory?: string;
    /**
     * Container Platform.
     */
    platform?: "linux" | "windows";
    /**
     * Azure zone.
     */
    region?: "westus" | "eastus";
    resource_group?: string;
    [k: string]: unknown;
  };
  azure_credentials?: string;
  /**
   * Compute Engine instance definition.
   */
  compute_engine_instance?: {
    cpu?: number;
    disk?: number;
    /**
     * Image name or family.
     */
    image?: string;
    /**
     * Google Cloud project of an image.
     */
    image_project?: string;
    memory?: string;
    nested_virtualization?: boolean;
    /**
     * VM platform.
     */
    platform?: "freebsd" | "linux" | "windows" | "solaris";
    [k: string]: unknown;
  };
  /**
   * Container definition for Community Cluster.
   */
  container?: {
    additional_containers?:
      | []
      | [
          {
            /**
             * Container CMD to override.
             */
            command?: string | [] | [string];
            cpu?: number;
            /**
             * Map represented as an object.
             */
            env?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Map represented as an object.
             */
            environment?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Docker Image.
             */
            image: string;
            memory?: string;
            name?: string;
            /**
             * Port exposed by the container.
             */
            port: number | string;
            /**
             * Boolean expression that can use environment variables.
             */
            privileged?: string;
            /**
             * Container readiness probe command.
             */
            readiness_command?: string | [] | [string];
            [k: string]: unknown;
          }
        ];
    cpu?: number;
    /**
     * Arguments for Docker build
     */
    docker_arguments?: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` ".*".
       */
      [k: string]: string;
    };
    /**
     * Relative path to Dockerfile to build container from.
     */
    dockerfile?: string;
    /**
     * Docker Image to use.
     */
    image?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    kvm?: string;
    memory?: string;
    registry_config?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    use_in_memory_disk?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    use_static_ip?: string;
    [k: string]: unknown;
  };
  /**
   * AWS EC2 definition.
   */
  ec2_instance?: {
    /**
     * AMI Image.
     */
    image?: string;
    /**
     * Image Platform.
     */
    platform?: "freebsd" | "linux" | "windows" | "solaris";
    /**
     * AWS region.
     */
    region?:
      | "eu-north-1"
      | "eu-west-3"
      | "eu-west-2"
      | "eu-west-1"
      | "eu-central-1"
      | "us-east-1"
      | "us-east-2"
      | "us-west-1"
      | "us-west-2";
    type?: string;
    [k: string]: unknown;
  };
  /**
   * EKS Container definition.
   */
  eks_container?: {
    additional_containers?:
      | []
      | [
          {
            /**
             * Container CMD to override.
             */
            command?: string | [] | [string];
            cpu?: number;
            /**
             * Map represented as an object.
             */
            env?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Map represented as an object.
             */
            environment?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Docker Image.
             */
            image: string;
            memory?: string;
            name?: string;
            /**
             * Port exposed by the container.
             */
            port: number | string;
            /**
             * Boolean expression that can use environment variables.
             */
            privileged?: string;
            /**
             * Container readiness probe command.
             */
            readiness_command?: string | [] | [string];
            [k: string]: unknown;
          }
        ];
    /**
     * EKS cluster name.
     */
    cluster_name?: string;
    cpu?: number;
    /**
     * Docker Image.
     */
    image?: string;
    memory?: string;
    /**
     * Kubernetes namespace to schedule CI jobs in.
     */
    namespace?: string;
    privileged?: boolean;
    /**
     * AWS region.
     */
    region?:
      | "eu-north-1"
      | "eu-west-3"
      | "eu-west-2"
      | "eu-west-1"
      | "eu-central-1"
      | "us-east-1"
      | "us-east-2"
      | "us-west-1"
      | "us-west-2";
    registry_config?: string;
    use_in_memory_disk?: boolean;
    [k: string]: unknown;
  };
  /**
   * Map represented as an object.
   */
  env?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` ".*".
     */
    [k: string]: string;
  };
  /**
   * Map represented as an object.
   */
  environment?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` ".*".
     */
    [k: string]: string;
  };
  /**
   * Boolean expression that can use environment variables.
   */
  experimental?: string;
  /**
   * macOS Virtual Machine definition for Community Cluster.
   */
  freebsd_instance?: {
    cpu?: number;
    /**
     * FreeBSD VM image.
     */
    image?: string;
    /**
     * Image family.
     */
    image_family?: string;
    memory?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    use_static_ip?: string;
    [k: string]: unknown;
  };
  /**
   * Google Compute Engine Virtual Machine definition.
   */
  gce_container?: {
    additional_containers?:
      | []
      | [
          {
            /**
             * Container CMD to override.
             */
            command?: string | [] | [string];
            cpu?: number;
            /**
             * Map represented as an object.
             */
            env?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Map represented as an object.
             */
            environment?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Docker Image.
             */
            image: string;
            memory?: string;
            name?: string;
            /**
             * Port exposed by the container.
             */
            port: number | string;
            /**
             * Boolean expression that can use environment variables.
             */
            privileged?: string;
            /**
             * Container readiness probe command.
             */
            readiness_command?: string | [] | [string];
            [k: string]: unknown;
          }
        ];
    /**
     * Container image.
     */
    container?: string;
    cpu?: number;
    disk?: number;
    /**
     * Boolean expression that can use environment variables.
     */
    enable_nested_virtualization?: string;
    /**
     * Image family.
     */
    image_family?: string;
    /**
     * Image name.
     */
    image_name?: string;
    /**
     * Google Cloud project of an image.
     */
    image_project?: string;
    memory?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    preemptible?: string;
    /**
     * Google Cloud Scopes of the VM.
     */
    scopes?: string | [] | [string];
    /**
     * Boolean expression that can use environment variables.
     */
    use_ssd?: string;
    /**
     * Google Cloud zone where to start a VM.
     */
    zone?:
      | "us-west1-b"
      | "us-west2-a"
      | "us-west1-c"
      | "us-west2-b"
      | "us-west2-c"
      | "europe-west1-d"
      | "europe-west2-c"
      | "europe-west3-b"
      | "europe-west4-a"
      | "europe-west3-c"
      | "europe-west4-b"
      | "europe-west1-b"
      | "europe-west2-a"
      | "europe-west1-c"
      | "europe-west2-b"
      | "europe-west3-a"
      | "us-west1-a"
      | "us-central1-a"
      | "europe-west4-c"
      | "us-central1-f"
      | "us-central1-b"
      | "us-central1-c"
      | "us-east1-b"
      | "us-east1-c"
      | "us-east1-d"
      | "us-east4-a"
      | "us-east4-b"
      | "us-east4-c";
    [k: string]: unknown;
  };
  /**
   * Google Compute Engine Virtual Machine definition.
   */
  gce_instance?: {
    cpu?: number;
    disk?: number;
    /**
     * Boolean expression that can use environment variables.
     */
    enable_nested_virtualization?: string;
    /**
     * Image family.
     */
    image_family?: string;
    /**
     * Image name.
     */
    image_name?: string;
    /**
     * Google Cloud project of an image.
     */
    image_project?: string;
    memory?: string;
    /**
     * VM platform.
     */
    platform?: "freebsd" | "linux" | "windows" | "solaris";
    /**
     * Boolean expression that can use environment variables.
     */
    preemptible?: string;
    /**
     * Google Cloud Scopes of the VM.
     */
    scopes?: string | [] | [string];
    /**
     * Machine Type.
     */
    type?: string;
    /**
     * Boolean expression that can use environment variables.
     */
    use_ssd?: string;
    /**
     * Google Cloud zone where to start a VM.
     */
    zone?:
      | "us-west1-b"
      | "us-west2-a"
      | "us-west1-c"
      | "us-west2-b"
      | "us-west2-c"
      | "europe-west1-d"
      | "europe-west2-c"
      | "europe-west3-b"
      | "europe-west4-a"
      | "europe-west3-c"
      | "europe-west4-b"
      | "europe-west1-b"
      | "europe-west2-a"
      | "europe-west1-c"
      | "europe-west2-b"
      | "europe-west3-a"
      | "us-west1-a"
      | "us-central1-a"
      | "europe-west4-c"
      | "us-central1-f"
      | "us-central1-b"
      | "us-central1-c"
      | "us-east1-b"
      | "us-east1-c"
      | "us-east1-d"
      | "us-east4-a"
      | "us-east4-b"
      | "us-east4-c";
    [k: string]: unknown;
  };
  gcp_credentials?: string;
  /**
   * Google Kubernetes Engine Container definition.
   */
  gke_container?: {
    additional_containers?:
      | []
      | [
          {
            /**
             * Container CMD to override.
             */
            command?: string | [] | [string];
            cpu?: number;
            /**
             * Map represented as an object.
             */
            env?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Map represented as an object.
             */
            environment?: {
              /**
               * This interface was referenced by `undefined`'s JSON-Schema definition
               * via the `patternProperty` ".*".
               */
              [k: string]: string;
            };
            /**
             * Docker Image.
             */
            image: string;
            memory?: string;
            name?: string;
            /**
             * Port exposed by the container.
             */
            port: number | string;
            /**
             * Boolean expression that can use environment variables.
             */
            privileged?: string;
            /**
             * Container readiness probe command.
             */
            readiness_command?: string | [] | [string];
            [k: string]: unknown;
          }
        ];
    /**
     * Image name.
     */
    builder_image_name?: string;
    /**
     * Google Cloud project of an image used to build Docker container from Dockerfile.
     */
    builder_image_project?: string;
    /**
     * GKE cluster name.
     */
    cluster_name?: string;
    cpu?: number;
    /**
     * Arguments for Docker build
     */
    docker_arguments?: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` ".*".
       */
      [k: string]: string;
    };
    /**
     * Relative path to Dockerfile.
     */
    dockerfile?: string;
    /**
     * Docker Image.
     */
    image?: string;
    memory?: string;
    /**
     * Kubernetes namespace to schedule CI jobs in.
     */
    namespace?: string;
    /**
     * Container Platform.
     */
    platform?: "linux" | "windows";
    privileged?: boolean;
    registry_config?: string;
    use_in_memory_disk?: boolean;
    /**
     * Google Cloud zone of the cluster.
     */
    zone?:
      | "us-west1-b"
      | "us-west2-a"
      | "us-west1-c"
      | "us-west2-b"
      | "us-west2-c"
      | "europe-west1-d"
      | "europe-west2-c"
      | "europe-west3-b"
      | "europe-west4-a"
      | "europe-west3-c"
      | "europe-west4-b"
      | "europe-west1-b"
      | "europe-west2-a"
      | "europe-west1-c"
      | "europe-west2-b"
      | "europe-west3-a"
      | "us-west1-a"
      | "us-central1-a"
      | "europe-west4-c"
      | "us-central1-f"
      | "us-central1-b"
      | "us-central1-c"
      | "us-east1-b"
      | "us-east1-c"
      | "us-east1-d"
      | "us-east4-a"
      | "us-east4-b"
      | "us-east4-c";
    [k: string]: unknown;
  };
  /**
   * macOS Virtual Machine definition for Community Cluster.
   */
  macos_instance?: {
    /**
     * macOS VM image.
     */
    image?: string;
    [k: string]: unknown;
  };
  /**
   * Boolean expression that can use environment variables.
   */
  only_if?: string;
  /**
   * macOS Virtual Machine definition for Community Cluster.
   */
  osx_instance?: {
    /**
     * macOS VM image.
     */
    image?: string;
    [k: string]: unknown;
  };
  /**
   * Persistent Worker definition.
   */
  persistent_worker?: {
    /**
     * Persistent Worker isolation.
     */
    isolation?: {
      /**
       * Parallels VM isolation.
       */
      parallels?: {
        /**
         * Image name.
         */
        image?: string;
        /**
         * SSH password
         */
        password?: string;
        /**
         * Image Platform.
         */
        platform?: "darwin" | "linux" | "windows";
        /**
         * SSH username
         */
        user?: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    /**
     * Labels for selection.
     */
    labels?: string;
    [k: string]: unknown;
  };
  /**
   * Boolean expression that can use environment variables.
   */
  skip?: string;
  /**
   * Boolean expression that can use environment variables.
   */
  skip_notifications?: string;
  /**
   * Boolean expression that can use environment variables.
   */
  stateful?: string;
  /**
   * Task timeout in minutes
   */
  timeout_in?: string;
  /**
   * Trigger type
   */
  trigger_type?: "automatic" | "manual";
  /**
   * Boolean expression that can use environment variables.
   */
  use_compute_credits?: string;
  /**
   * Windows Container definition for Community Cluster.
   */
  windows_container?: {
    cpu?: number;
    /**
     * Arguments for Docker build
     */
    docker_arguments?: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` ".*".
       */
      [k: string]: string;
    };
    /**
     * Relative path to Dockerfile to build container from.
     */
    dockerfile?: string;
    /**
     * Docker Image to use.
     */
    image?: string;
    memory?: string;
    /**
     * Windows version of container.
     */
    os_version?: "2019" | "1709" | "1803";
    /**
     * Boolean expression that can use environment variables.
     */
    use_static_ip?: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
