/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TypewizConfigurationSchema {
  common?: {
    /**
     * If given, all the file paths in the collected type info will be resolved relative to this directory.
     */
    rootDir?: string;
    /**
     * Path to your project's tsconfig file. This is required for several other options like implicit this instrumentation and type inference using static analysis.
     */
    tsConfig?: string;
    [k: string]: any;
  };
  instrument?: {
    /**
     * Try to find even more types by combining static analysis with the runtime analysis. TypeWiz will try to use TypeScript's inferred types when determining the type of a function argument.
     */
    instrumentCallExpressions?: boolean;
    /**
     * Find type of this in non-class member functions. Requires common.tsConfig to be set
     */
    instrumentImplicitThis?: boolean;
    /**
     * Don't add a declaration of $_$twiz to instrumented files.
     */
    skipTwizDeclarations?: boolean;
    [k: string]: any;
  };
  applyTypes?: {
    /**
     * A prefix that will be added in front of each type applied. You can use a javascript comment to mark the automatically added types. The prefix will be added after the colon character, just before the actual type.
     */
    prefix?: string;
    [k: string]: any;
  };
}
