/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Prometheus rules file
 */
export type PrometheusRules = PrometheusRules1 & PrometheusRules2;
/**
 * Labels to add or overwrite before storing the result.
 */
export type Labels = {
  [k: string]: LabelValue;
} & ({
  [k: string]: LabelValue;
} | null);
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 */
export type LabelValue = string;
/**
 * Labels to add or overwrite for each alert.
 */
export type Labels1 = {
  [k: string]: LabelValue;
} & ({
  [k: string]: LabelValue;
} | null);
/**
 * Annotations to add to each alert.
 */
export type Annotations = {
  [k: string]: TmplString;
} & ({
  [k: string]: TmplString;
} | null);
/**
 * A string which is template-expanded before usage.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^[a-zA-Z_][a-zA-Z0-9_]*$".
 */
export type TmplString = string;
export type PrometheusRules2 = {
  groups?:
    | {
        /**
         * The name of the group. Must be unique within a file.
         */
        name: string;
        /**
         * How often rules in the group are evaluated.
         */
        interval?: string | null;
        /**
         * Limit the number of alerts an alerting rule and series a recording rule can produce. 0 is no limit.
         */
        limit?: number | null;
        rules?: (RecordingRule | AlertingRule)[] | null;
      }[]
    | null;
} | null;

export interface PrometheusRules1 {
  groups?:
    | {
        /**
         * The name of the group. Must be unique within a file.
         */
        name: string;
        /**
         * How often rules in the group are evaluated.
         */
        interval?: string | null;
        /**
         * Limit the number of alerts an alerting rule and series a recording rule can produce. 0 is no limit.
         */
        limit?: number | null;
        rules?: (RecordingRule | AlertingRule)[] | null;
      }[]
    | null;
}
export interface RecordingRule {
  /**
   * The name of the time series to output to. Must be a valid metric name.
   */
  record: string;
  /**
   * The PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and the result recorded as a new set of time series with the metric name as given by 'record'.
   */
  expr: string;
  labels?: Labels;
}
export interface AlertingRule {
  /**
   * The name of the alert. Must be a valid metric name.
   */
  alert: string;
  /**
   * The PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and all resultant time series become pending/firing alerts.
   */
  expr: string;
  /**
   * Alerts are considered firing once they have been returned for this long. Alerts which have not yet fired for long enough are considered pending.
   */
  for?: string | null;
  labels?: Labels1;
  annotations?: Annotations;
}
