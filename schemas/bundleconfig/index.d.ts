/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Bundle = {
  /**
   * Set to true to include the output file in the project. Doesn't work in some Visual Studio project types like ASP.NET Core applications.
   */
  includeInProject?: boolean;
  /**
   * One or more relative file names or globbing patterns to bundle. Example: "scripts/** /*.js"
   */
  inputFiles: string[];
  /**
   * Specify options for minification of the output file.
   */
  minify?: {
    enabled: boolean;
    /**
     * Produce a .gz file after minification.
     */
    gzip?: boolean;
    [k: string]: unknown;
  };
  /**
   * The relative path to the desired output file name.
   */
  outputFileName: string;
  [k: string]: unknown;
} & Bundle1;
export type Bundle1 = JsBundle | CssBundle | HtmlBundle;
/**
 * Schema for bundleconfig.json files
 */
export type Bundleconfig = Bundle[];

export interface JsBundle {
  outputFileName?: {
    [k: string]: unknown;
  };
  /**
   * JavaScript only. Set to true to produce a source map.
   */
  sourceMap?: boolean;
  /**
   * JavaScript only. Sets a root path for source maps.
   */
  sourceMapRootPath?: string;
  minify?: AjaxminBaseSettings;
  [k: string]: unknown;
}
export interface AjaxminBaseSettings {
  /**
   * For the multi-line output feature, how many spaces to use when indenting a block (see outputMode).
   */
  indentSize?: number;
  /**
   * SingleLine minifies everything to a single line. MultipleLines breaks the minified code into multiple lines for easier reading.
   */
  outputMode?: "multipleLines" | "singleLine" | "none";
  [k: string]: unknown;
}
export interface CssBundle {
  outputFileName?: {
    [k: string]: unknown;
  };
  minify?: AjaxminBaseSettings;
  [k: string]: unknown;
}
export interface HtmlBundle {
  outputFileName?: {
    [k: string]: unknown;
  };
  minify?: {
    /**
     * HTML only. Remove values from boolean attributes.
     */
    collapseBooleanAttributes?: boolean;
    /**
     * HTML only. Indicating whether to collapse whitespaces.
     */
    collapseWhitespace?: boolean;
    /**
     * HTML only. Indicating whether the parsing is occurring on an HTML fragment, to avoid creating missing tags (like html, body, head).
     */
    isFragmentOnly?: boolean;
    /**
     * HTML only. Indicating whether to keep one space when collapsing.
     */
    keepOneSpaceWhenCollapsing?: boolean;
    /**
     * HTML only. Minify CSS code in style tags.
     */
    minifyEmbeddedCssCode?: boolean;
    /**
     * HTML only. Minify JS code in script tags.
     */
    minifyEmbeddedJsCode?: boolean;
    /**
     * HTML only. Minify CSS code in style attributes.
     */
    minifyInlineCssCode?: boolean;
    /**
     * HTML only. Preserve case of tag and attribute names.
     */
    preserveCase?: boolean;
    /**
     * HTML only. Remove all HTML comments except conditional, noindex, Knockout.js containerless comments and Angular.js comment directives.
     */
    removeHtmlComments?: boolean;
    /**
     * HTML only. Remove optional end tags.
     */
    removeOptionalEndTags?: boolean;
    /**
     * HTML only. Indicating whether to remove quoted attributes when possible.
     */
    removeQuotedAttributes?: boolean;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
