/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type PositiveInteger = number;
export type PositiveIntegerDefault0 = PositiveInteger;
export type SchemaArray = SchemaDraftV4[];
export type StringArray = string[];
export type SimpleTypes = "array" | "boolean" | "integer" | "null" | "number" | "object" | "string";

/**
 * Modified JSON Schema draft v4 that includes the optional '$ref' and 'format'
 */
export interface SchemaDraftV4 {
  id?: string;
  $schema?: string;
  $ref?: string;
  format?: string;
  title?: string;
  description?: string;
  default?: any;
  multipleOf?: number;
  maximum?: number;
  exclusiveMaximum?: boolean;
  minimum?: number;
  exclusiveMinimum?: boolean;
  maxLength?: PositiveInteger;
  minLength?: PositiveIntegerDefault0;
  pattern?: string;
  additionalItems?: boolean | SchemaDraftV4;
  items?: SchemaDraftV4 | SchemaArray;
  maxItems?: PositiveInteger;
  minItems?: PositiveIntegerDefault0;
  uniqueItems?: boolean;
  maxProperties?: PositiveInteger;
  minProperties?: PositiveIntegerDefault0;
  required?: StringArray;
  additionalProperties?: boolean | SchemaDraftV4;
  definitions?: {
    [k: string]: SchemaDraftV4;
  };
  properties?: {
    [k: string]: SchemaDraftV4;
  };
  patternProperties?: {
    [k: string]: SchemaDraftV4;
  };
  dependencies?: {
    [k: string]: SchemaDraftV4 | StringArray;
  };
  enum?: any[];
  type?: SimpleTypes | SimpleTypes[];
  allOf?: SchemaArray;
  anyOf?: SchemaArray;
  oneOf?: SchemaArray;
  not?: SchemaDraftV4;
  [k: string]: any;
}
