/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForTypedocJson {
  /**
   * Should TypeDoc disable the testing and cleaning of the output directory?
   */
  disableOutputCheck?: boolean;
  /**
   * Specifies the fully qualified name of the root symbol.
   */
  entryPoint?: string;
  /**
   * Exclude files by the given pattern when a path is provided as source. Supports minimatch patterns.
   */
  exclude?: string[];
  /**
   * Prevent externally resolved TypeScript files from being documented.
   */
  excludeExternals?: boolean;
  /**
   * Prevent symbols that are not exported from being documented.
   */
  excludeNotExported?: boolean;
  /**
   * Ignores private variables and methods
   */
  excludePrivate?: boolean;
  /**
   * Ignores protected variables and methods
   */
  excludeProtected?: boolean;
  /**
   * Define a pattern for files that should be considered being external.
   */
  externalPattern?: string[];
  /**
   * Set the Google Analytics tracking ID and activate tracking code.
   */
  gaID?: string;
  /**
   * Set the site name for Google Analytics.
   */
  gaSite?: string;
  /**
   * Use specified revision or branch instead of the last revision for linking to GitHub source files.
   */
  gitRevision?: string;
  /**
   * Do not print the TypeDoc link at the end of the page.
   */
  hideGenerator?: boolean;
  /**
   * Generates documentation, even if the project does not TypeScript compile.
   */
  ignoreCompilerErrors?: boolean;
  /**
   * Turn on parsing of .d.ts declaration files.
   */
  includeDeclarations?: boolean;
  /**
   * Specifies the location to look for included documents (use [[include:FILENAME]] in comments).
   */
  includes?: string;
  /**
   * Specifies the location to output a JSON file containing all of the reflection data.
   */
  json?: string;
  /**
   * Emits a list of broken symbol [[navigation]] links after documentation generation
   */
  listInvalidSymbolLinks?: boolean;
  /**
   * Specify the logger that should be used.
   */
  logger?: "console" | "none";
  /**
   * Specifies the location with media files that should be copied to the output directory.
   */
  media?: string;
  /**
   * Specifies the output mode the project is used to be compiled with.
   */
  mode?: "file" | "modules";
  /**
   * Set the name of the project that will be used in the header of the template.
   */
  name?: string;
  /**
   * Specifies the location the documentation should be written to.
   */
  out?: string;
  /**
   * Specify the npm plugins that should be loaded. Omit to load all installed plugins.
   */
  plugin?: string[];
  /**
   * Path to the readme file that should be displayed on the index page. Pass none to disable the index page and start the documentation on the globals page.
   */
  readme?: "none" | string;
  /**
   * The sources files from which to build documentation.
   */
  src?: string | string[];
  /**
   * Specify the path to the theme that should be used.
   */
  theme?: ("default" | "minimal") | string;
  /**
   * Specifies the top level table of contents.
   */
  toc?: string[];
  /**
   * Specify a typescript config file that should be loaded. If not specified TypeDoc will look for 'tsconfig.json' in the current directory.
   */
  tsconfig?: string;
  [k: string]: any;
}
