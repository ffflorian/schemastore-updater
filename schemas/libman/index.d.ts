/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type JSONSchemaForClientSideLibraryConfigFiles = JSONSchemaForClientSideLibraryConfigFiles1 &
  JSONSchemaForClientSideLibraryConfigFiles2;
export type JSONSchemaForClientSideLibraryConfigFiles1 = (SpecifiedProvider | DefaultProvider) &
  (SpecifiedDestination | DefaultDestination);

export interface SpecifiedProvider {
  libraries?: {
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
export interface DefaultProvider {
  /**
   * The unique identifier of the provider to use as default.
   */
  defaultProvider?: string;
  [k: string]: unknown;
}
export interface SpecifiedDestination {
  libraries?: {
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
export interface DefaultDestination {
  /**
   * The default destination to place library files.
   */
  defaultDestination?: string;
  [k: string]: unknown;
}
export interface JSONSchemaForClientSideLibraryConfigFiles2 {
  /**
   * A list of library references.
   */
  libraries: LibraryEntry[];
  /**
   * The syntax version of this config file. Can only be 1.0
   */
  version?: "1.0";
  [k: string]: unknown;
}
export interface LibraryEntry {
  /**
   * The file names of the individual files to copy to the project.
   */
  files?: string[];
  /**
   * The unique identifier of the library.
   */
  library: string;
  /**
   * The relative folder path from this config file to the location where the files should be copied to.
   */
  destination?: string;
  /**
   * The unique identifier of the provider
   */
  provider?: string;
  [k: string]: unknown;
}
