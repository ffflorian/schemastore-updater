/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The profile configuration for Qodana analysis
 */
export type Profile =
  | {
      /**
       * The profile name (embedded or located in the project)
       */
      name: string;
    }
  | {
      /**
       * The path to the profile file relative to the project root
       */
      path: string;
    };

/**
 * A configuration file for Qodana (https://jetbrains.com/qodana), named qodana.yaml or qodana.yml
 */
export interface Qodana {
  /**
   * The version of the file format
   */
  version: "1.0";
  profile?: Profile;
  /**
   * The number of problems that causes Qodana to exit with code 255
   */
  failThreshold?: number;
  script?: Script;
  /**
   * The inspections and paths that are excluded from analysis
   *
   * @minItems 0
   */
  exclude?: Exclude[];
  /**
   * The inspections and paths that are added to those from the profile
   *
   * @minItems 0
   */
  include?: Include[];
  /**
   * The linter (Docker image) to run for Qodana CLI / any CI extensions
   */
  linter?: string;
  /**
   * The command to run inside Docker before the analysis starts
   */
  bootstrap?: string;
  /**
   * Set JVM properties to be used while running Qodana
   */
  properties?: {
    [k: string]: string;
  };
  /**
   * A list of license rules to apply for license checks
   *
   * @minItems 0
   */
  licenseRules?: LicenseRule[];
  /**
   * @minItems 0
   */
  dependencyIgnores?: DependencyIgnore[];
  /**
   * @minItems 0
   */
  dependencyOverrides?: DependencyOverride[];
  /**
   * @minItems 0
   */
  customDependencies?: CustomDependency[];
  /**
   * The configuration for .NET solutions and projects
   */
  "dot-net"?:
    | {
        /**
         * The name of a .NET solution inside the Qodana project
         */
        solution?: string;
      }
    | {
        /**
         * The name of a .NET project inside the Qodana project
         */
        project?: string;
      };
  [k: string]: unknown;
}
/**
 * The run scenario. 'default' by default
 */
export interface Script {
  /**
   * The name of the script
   */
  name?: "default" | "php-migration";
  /**
   * The parameters to pass to the script
   */
  parameters?: {
    [k: string]: unknown;
  };
}
/**
 * The inspections or paths to exclude from analysis
 */
export interface Exclude {
  /**
   * The ID of the inspection to exclude, or 'All'
   */
  name: string;
  /**
   * The path in which to disable the inspection, relative to the project root. Omitting the paths disables the inspection everywhere
   *
   * @minItems 0
   */
  paths?: string[];
}
/**
 * The inspections to run in addition to those from the profile
 */
export interface Include {
  /**
   * The ID of the inspection to be added
   */
  name: string;
}
/**
 * A license rule to apply for license compatibility checks in Qodana
 */
export interface LicenseRule {
  /**
   * The list of project license SPDX IDs
   *
   * @minItems 0
   */
  keys?: string[];
  /**
   * The list of allowed dependency licenses for the project
   *
   * @minItems 0
   */
  allowed?: string[];
  /**
   * The list of prohibited dependency licenses for the project
   *
   * @minItems 0
   */
  prohibited?: string[];
}
/**
 * A dependency to ignore for license checks in Qodana
 */
export interface DependencyIgnore {
  /**
   * The name of a dependency to ignore
   */
  name?: string;
}
/**
 * A dependency metadata to override for license checks in Qodana
 */
export interface DependencyOverride {
  /**
   * The dependency name
   */
  name: string;
  /**
   * The dependency version
   */
  version: string;
  /**
   * The dependency homepage
   */
  url?: string;
  /**
   * The dependency licenses
   *
   * @minItems 0
   */
  licenses: License[];
}
/**
 * A license to apply for license compatibility checks in Qodana
 */
export interface License {
  /**
   * The SPDX ID of the license
   */
  key?: string;
  /**
   * The license homepage
   */
  url?: string;
}
/**
 * A dependency to add to license checks to Qodana
 */
export interface CustomDependency {
  /**
   * The dependency name
   */
  name: string;
  /**
   * The dependency version
   */
  version: string;
  /**
   * The dependency homepage
   */
  url?: string;
  /**
   * The dependency licenses
   *
   * @minItems 0
   */
  licenses: License[];
}
