/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForBowerrcFiles {
  analytics?: boolean;
  /**
   * The directory from which bower should run. All relative paths will be calculated according to this setting.
   */
  cwd?: string;
  /**
   * The directory from which bower should run. All relative paths will be calculated according to this setting.
   */
  directory?: string;
  /**
   * A file path to the Bower configuration file
   */
  json?: string;
  /**
   * The registry config
   */
  registry?:
    | string
    | {
        [k: string]: any;
      };
  /**
   * The proxy to use for http requests.
   */
  proxy?: string;
  /**
   * The proxy to use for https requests.
   */
  "https-proxy"?: string;
  /**
   * Sets the User-Agent for each request made.
   */
  "user-agent"?: string;
  /**
   * The timeout to be used when making requests in milliseconds.
   */
  timeout?: number;
  /**
   * Whether or not to do SSL key validation when making requests via https.
   */
  "strict-ssl"?: boolean;
  /**
   * The CA certificates to be used, defaults to null. This is similar to the registry key, specifying each CA to use for each registry endpoint.
   */
  ca?:
    | {
        [k: string]: any;
      }
    | string;
  /**
   * Enable or disable use of colors in the CLI output.
   */
  color?: boolean;
  /**
   * Where to store persistent data, such as cache, needed by bower.
   */
  storage?: {
    packages?: string;
    registry?: string;
    links?: string;
    [k: string]: any;
  };
  /**
   * Where to store temporary files and folders
   */
  tmp?: string;
  /**
   * Makes bower interactive, prompting whenever necessary
   */
  interactive?: boolean;
  /**
   * Identifies pluggable resolvers to be used for locating and fetching packages
   */
  resolvers?: string[];
  /**
   * Whitelists hosts which are known to support shallow cloning
   */
  shallowCloneHosts?: string[];
  /**
   * Contains custom hooks used to trigger other automated tools
   */
  scripts?: {
    /**
     * A script to run before install
     */
    preinstall?: string;
    /**
     * A script to run after install
     */
    postinstall?: string;
    /**
     * A script to run before uninstall
     */
    preuninstall?: string;
    [k: string]: any;
  };
  /**
   * Bower will ignore these dependencies when resolving packages
   */
  ignoredDependencies?: string[];
  [k: string]: any;
}
