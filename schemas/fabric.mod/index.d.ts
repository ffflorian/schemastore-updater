/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The environment where this mod will be loaded
 */
export type Environment = "*" | "client" | "server";
export type Entrypoint =
  | {
      /**
       * The language adapter to use
       */
      adapter?: string;
      /**
       * The entrypoint function or class
       */
      value: string;
      [k: string]: unknown | undefined;
    }
  | string;
export type VersionRanges = (VersionRange | VersionRange[]) | undefined;
/**
 * A version range that matches versions. The following variants are supported:
 *
 * - A single asterisk matches any version.
 * - Ranges following NPM semver specification including >=, >, =, <, <=, X-ranges (1.x), tilde ranges (fixed minor) and caret ranges (fixed major).
 * - Additionally exact string matches will always be performed.
 */
export type VersionRange = string;
export type Person =
  | string
  | {
      /**
       * The name of the person
       */
      name: string;
      contact?: ContactInfo;
      [k: string]: unknown | undefined;
    };

export interface Fabric {
  /**
   * The mod identifier
   */
  id: string;
  /**
   * The mod version
   */
  version: string;
  /**
   * The version of the fabric.mod.json schema
   */
  schemaVersion: 1;
  environment?: Environment;
  /**
   * The entrypoints used by this mod
   */
  entrypoints?: {
    /**
     * The entrypoint for all environments (classes must implement ModInitializer)
     */
    main?: Entrypoint[];
    /**
     * The entrypoint for the client environment (classes must implement ClientModInitializer)
     */
    client?: Entrypoint[];
    /**
     * The entrypoint for the server environment (classes must implement DedicatedServerModInitializer)
     */
    server?: Entrypoint[];
    /**
     * Custom mod entrypoints
     */
    [k: string]: Entrypoint[] | undefined;
  };
  /**
   * Contains an array of nestedJar objects
   */
  jars?: NestedJar[];
  /**
   * A string→string dictionary, connecting namespaces to LanguageAdapter implementations
   */
  languageAdapters?: {
    [k: string]: string | undefined;
  };
  mixins?: (
    | string
    | {
        /**
         * Path to mixin file from the root of the JAR
         */
        config?: string;
        environment?: Environment;
        [k: string]: unknown | undefined;
      }
  )[];
  /**
   * Path to an access widener definition file
   */
  accessWidener?: string;
  /**
   * id→versionRange map for dependencies. Failure to meet these causes a hard failure
   */
  depends?: {
    [k: string]: VersionRanges | undefined;
  };
  /**
   * id→versionRange map for dependencies. Failure to meet these causes a soft failure (warning)
   */
  recommends?: {
    [k: string]: VersionRanges | undefined;
  };
  /**
   * id→versionRange map for dependencies. Are not matched and are mainly used as metadata
   */
  suggests?: {
    [k: string]: VersionRanges | undefined;
  };
  /**
   * id→versionRange map for dependencies. A successful match causes a soft failure (warning)
   */
  conflicts?: {
    [k: string]: VersionRanges | undefined;
  };
  /**
   * id→versionRange map for dependencies. A successful match causes a hard failure
   */
  breaks?: {
    [k: string]: VersionRanges | undefined;
  };
  /**
   * Name of the mod
   */
  name?: string;
  /**
   * Description of the mod
   */
  description?: string;
  /**
   * The direct authorship information
   */
  authors?: Person[];
  /**
   * Contributors to this mod
   */
  contributors?: Person[];
  contact?: ContactInfo1;
  /**
   * The license the mod uses
   */
  license?: string | string[];
  icon?:
    | string
    | {
        /**
         * The path to a single .PNG file from the root of the JAR
         */
        [k: string]: string | undefined;
      };
  /**
   * A map of namespace:id→value for custom data fields.
   */
  custom?: {
    [k: string]: unknown | undefined;
  };
  [k: string]: unknown | undefined;
}
export interface NestedJar {
  /**
   * A string value pointing to a path from the root of the JAR to a nested JAR which should be loaded alongside the outer mod JAR
   */
  file: string;
  [k: string]: unknown | undefined;
}
/**
 * Contact information for the person
 */
export interface ContactInfo {
  /**
   * Contact e-mail pertaining to the mod
   */
  email?: string;
  /**
   * IRC channel pertaining to the mod. Must be of a valid URL format
   */
  irc?: string;
  /**
   * Project or user homepage. Must be a valid HTTP/HTTPS address
   */
  homepage?: string;
  /**
   * Project issue tracker. Must be a valid HTTP/HTTPS address
   */
  issues?: string;
  /**
   * Project source code repository. Must be a valid URL
   */
  sources?: string;
  /**
   * Custom contact or profile informations
   */
  [k: string]: string | undefined;
}
/**
 * Contact information for the mod
 */
export interface ContactInfo1 {
  /**
   * Contact e-mail pertaining to the mod
   */
  email?: string;
  /**
   * IRC channel pertaining to the mod. Must be of a valid URL format
   */
  irc?: string;
  /**
   * Project or user homepage. Must be a valid HTTP/HTTPS address
   */
  homepage?: string;
  /**
   * Project issue tracker. Must be a valid HTTP/HTTPS address
   */
  issues?: string;
  /**
   * Project source code repository. Must be a valid URL
   */
  sources?: string;
  /**
   * Custom contact or profile informations
   */
  [k: string]: string | undefined;
}
