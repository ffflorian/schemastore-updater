/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Use JSONPath syntax to navigate to the node where the transform should be applied.
 */
export type JdtPath = string;
/**
 * The transformation value that should be applied.
 */
export type JdtValue = string;

export interface JSONSchemaForJSONDocumentTransforms {
  /**
   * Renames nodes
   */
  "@jdt.rename"?:
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      }[]
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      };
  /**
   * Replaces the current node with the given value.
   */
  "@jdt.replace"?:
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      }[]
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      };
  /**
   * Removes the node with the given name from the current level.
   */
  "@jdt.remove"?:
    | (
        | boolean
        | number
        | null
        | number
        | {
            [k: string]: unknown;
          }
        | string
      )[]
    | boolean
    | {
        "@jdt.path"?: JdtPath;
        [k: string]: unknown;
      }
    | string;
  /**
   * Merges the current node value with the given object.
   */
  "@jdt.merge"?:
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      }
    | {
        "@jdt.path"?: JdtPath;
        "@jdt.value"?: JdtValue;
        [k: string]: unknown;
      }[];
  [k: string]: JSONSchemaForJSONDocumentTransforms;
}
