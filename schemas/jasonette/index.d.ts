/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ImgUrl = string;
export type Custom = string;
export type Builtins =
  | "$render"
  | "$reload"
  | "$snapshot"
  | "$href"
  | "$close"
  | "$back"
  | "$network.request"
  | "$network.upload"
  | "$session.set"
  | "$session.reset"
  | "$set"
  | "$get"
  | "$cache.set"
  | "$cache.reset"
  | "$global.set"
  | "$global.reset"
  | "$util.banner"
  | "$util.toast"
  | "$util.alert"
  | "$util.share"
  | "$util.picker"
  | "$util.datepicker"
  | "$util.addressbook"
  | "$media.camera"
  | "$media.picker"
  | "media.player"
  | "$audio.play"
  | "$audio.pause"
  | "$audio.stop"
  | "$audio.seek"
  | "$audio.position"
  | "$audio.duration"
  | "audio.record"
  | "$geo.get"
  | "$timer.start"
  | "$timer.stop"
  | "$convert.csv"
  | "$convert.rss";
export type AdvancedTitle = TitleWithImage | TitleWithLabel;
export type Color = string;
export type ImgUrl1 = string;
export type None = "none";
export type BorderColor = string;

export interface $Jason {
  /**
   * The head contains a set of metadata that doesn't get displayed directly
   */
  head?: {
    title?: string;
    description?: string;
    icon?: ImgUrl;
    offline?: boolean;
    styles?: {
      [k: string]: Style;
    };
    actions?: {
      [k: string]: Action;
    };
    templates?: unknown;
    data?: unknown;
    [k: string]: unknown;
  };
  /**
   * Body contains everything that gets displayed on the screen.
   */
  body?: {
    ads?: unknown;
    /**
     * Header describes the top header bar and its components.
     */
    header?: {
      title?: string | AdvancedTitle;
      /**
       * Search component. Calls an action you define when user submits a query.
       */
      search?: {
        /**
         * The value inside the search input is automatically stored to the local variable named by this property
         */
        name?: string;
        placeholder?: unknown;
        action?: Action1;
        style?: {
          /**
           * background color
           */
          background?: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      };
      menu?: unknown;
      style?: Style;
      [k: string]: unknown;
    };
    sections?: unknown;
    layers?: unknown;
    footer?: unknown;
    style?: {
      /**
       * setting the background of the view
       */
      background?: Color | ImgUrl1;
      /**
       * setting the border color for section items
       */
      border?: None | BorderColor;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Style {
  font?: string;
  size?: number;
  padding?: number;
  color?: string;
  [k: string]: unknown;
}
export interface Action {
  type: Custom | Builtins;
  options?: {
    [k: string]: unknown;
  };
  success?: {
    type?: string;
    options?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  error?: {
    type?: string;
    options?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface TitleWithImage {
  type: "image";
  url: ImgUrl;
  style?: {
    width?: number;
    height?: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface TitleWithLabel {
  type: "label";
  text: string;
  [k: string]: unknown;
}
/**
 * Action to trigger if defined
 */
export interface Action1 {
  type: Custom | Builtins;
  options?: {
    [k: string]: unknown;
  };
  success?: {
    type?: string;
    options?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  error?: {
    type?: string;
    options?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
