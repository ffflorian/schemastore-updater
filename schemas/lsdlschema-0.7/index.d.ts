/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A conceptual entity or table in the conceptual model to which a linguistic schema object is bound
 */
export type ConceptualEntityBinding =
  | {
      /**
       * The name of the table.
       */
      Table: string;
    }
  | {
      /**
       * The name of the conceptual entity (e.g. table or pod)
       */
      ConceptualEntity: string;
    };
/**
 * A conceptual property, column, or measure in the conceptual model to which a linguistic schema object is bound.
 */
export type ConceptualPropertyBinding =
  | {
      /**
       * The name of the table containing the column or measure
       */
      Table: string;
      /**
       * The name of the property containing the variation set that contains the column or measure
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the column or measure
       */
      VariationSet?: string;
      /**
       * The name of the column
       */
      Column: string;
    }
  | {
      /**
       * The name of the table containing the column or measure
       */
      Table: string;
      /**
       * The name of the property containing the variation set that contains the column or measure
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the column or measure
       */
      VariationSet?: string;
      /**
       * The name of the measure
       */
      Measure: string;
    }
  | {
      /**
       * The name of the conceptual entity containing the property
       */
      ConceptualEntity: string;
      /**
       * The name of the property containing the variation set that contains the property
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the property
       */
      VariationSet?: string;
      /**
       * The name of the property
       */
      ConceptualProperty: string;
    };
/**
 * A hierarchy in the conceptual model to which a linguistic schema object is bound
 */
export type HierarchyBinding =
  | {
      /**
       * The name of the table containing the hierarchy
       */
      Table: string;
      /**
       * The name of the property containing the variation set that contains the hierarchy
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the hierarchy
       */
      VariationSet?: string;
      /**
       * The name of the hierarchy
       */
      Hierarchy: string;
    }
  | {
      /**
       * The name of the conceptual entity containing the hierarchy
       */
      ConceptualEntity: string;
      /**
       * The name of the property containing the variation set that contains the hierarchy
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the hierarchy
       */
      VariationSet?: string;
      /**
       * The name of the hierarchy
       */
      Hierarchy: string;
    };
/**
 * A hierarchy level in the conceptual model to which a linguistic schema object is bound
 */
export type HierarchyLevelBinding =
  | {
      /**
       * The name of the table containing the hierarchy
       */
      Table: string;
      /**
       * The name of the property containing the variation set that contains the hierarchy
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the hierarchy
       */
      VariationSet?: string;
      /**
       * The name of the hierarchy
       */
      Hierarchy: string;
      /**
       * The name of the hierarchy level
       */
      HierarchyLevel: string;
    }
  | {
      /**
       * The name of the conceptual entity containing the hierarchy
       */
      ConceptualEntity: string;
      /**
       * The name of the property containing the variation set that contains the hierarchy
       */
      VariationSource?: string;
      /**
       * The name of the variation set that contains the hierarchy
       */
      VariationSet?: string;
      /**
       * The name of the hierarchy
       */
      Hierarchy: string;
      /**
       * The name of the hierarchy level
       */
      HierarchyLevel: string;
    };
/**
 * Words which can be used to refer to this entity
 *
 * @minItems 1
 */
export type Words = [Word, ...Word[]];
/**
 * A term in the linguistic schema
 */
export type Word = NonEmptyString | FullWord;
export type NonEmptyString = string;
/**
 * A role in a linguistic relationship.
 *
 * This interface was referenced by `Roles`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export type Role = Identifier | FullRole;
/**
 * Identifier for a linguistic schema object
 */
export type Identifier = string;
/**
 * Nouns which can be used to refer to the entity which is the target of the role, when used in the context of the relationship
 *
 * @minItems 1
 */
export type Words1 = [Word, ...Word[]];
/**
 * A set of conditions which are required to be true for instances of the relationship represented in the semantic model
 *
 * @minItems 1
 * @maxItems 1
 */
export type Conditions = [Condition];
export type NullableTextValue = string | null;
export type NullableNumberValue = number | null;
export type NullableBooleanValue = boolean | null;
/**
 * One or more text values to use in a condition
 */
export type TextValues = NullableTextValue | [NullableTextValue];
/**
 * One or more number values to use in a condition
 */
export type NumberValues = NullableNumberValue | [NullableNumberValue];
/**
 * One or more Boolean values to use in a condition
 */
export type BooleanValues = NullableBooleanValue | [NullableBooleanValue];
/**
 * A set of syntactic frames which define the types of language used to describe the relationship
 *
 * @minItems 1
 */
export type Phrasings = [Phrasing, ...Phrasing[]];
/**
 * The phrasings on a linguistic relationship
 */
export type Phrasing = (
  | AttributePhrasing
  | NamePhrasing
  | AdjectivePhrasing
  | DynamicAdjectivePhrasing
  | NounPhrasing
  | DynamicNounPhrasing
  | PrepositionPhrasing
  | VerbPhrasing
) &
  SharedPhrasingProperties;
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases = [PrepPhrase, ...PrepPhrase[]];
/**
 * Prepositions used in the prepositional phrase
 *
 * @minItems 1
 */
export type Words2 = [Word, ...Word[]];
/**
 * Properties of an adjective phrasing
 */
export type AdjectivePhrasingProperties =
  | {
      /**
       * The entity which is described via an adjective
       */
      Subject: Identifier | FullRoleReference;
      Adjectives: Words3;
      Antonyms?: Words4;
      /**
       * The entity which measures the extent to which the Adjectives apply
       */
      Measurement?: Identifier | FullRoleReference;
      PrepositionalPhrases?: PrepPhrases1;
    }
  | {
      /**
       * The entity which is described via an adjective
       */
      Subject: Identifier | FullRoleReference;
      Antonyms: Words5;
      /**
       * The entity which measures the extent to which the Adjectives apply
       */
      Measurement?: Identifier | FullRoleReference;
      PrepositionalPhrases?: PrepPhrases2;
    };
/**
 * Adjectives used to describe the Subject (with a high measurement)
 *
 * @minItems 1
 */
export type Words3 = [Word, ...Word[]];
/**
 * Adjectives used to describe the Subject (with a low measurement)
 *
 * @minItems 1
 */
export type Words4 = [Word, ...Word[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases1 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Adjectives used to describe the Subject (with a low measurement)
 *
 * @minItems 1
 */
export type Words5 = [Word, ...Word[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases2 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases3 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Nouns used to describe the Subject
 *
 * @minItems 1
 */
export type Words6 = [Word, ...Word[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases4 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases5 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Prepositions used in the prepositional phrase
 *
 * @minItems 1
 */
export type Words7 = [Word, ...Word[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases6 = [PrepPhrase, ...PrepPhrase[]];
/**
 * Verbs used to describe the relationship
 *
 * @minItems 1
 */
export type Words8 = [Word, ...Word[]];
/**
 * Additional prepositional phrases which apply to the phrasing
 *
 * @minItems 1
 */
export type PrepPhrases7 = [PrepPhrase, ...PrepPhrase[]];
/**
 * The global text substitutions in the linguistic schema.
 *
 * @minItems 1
 */
export type GlobalSubstitutions = [GlobalSubstitution, ...GlobalSubstitution[]];
/**
 * This interface was referenced by `GlobalSubstitution`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export type GlobalSubstitutionProperties = string | FullGlobalSubstitutionProperties;

/**
 * Linguistic Schema Definition Language schema
 */
export interface LSDLSchema {
  /**
   * Version of LSDL
   */
  Version: "0.7.0";
  /**
   * Target language for the linguistic schema
   */
  Language: string;
  /**
   * Indicates which heuristics should be run to automatically improve the linguistic schema.
   */
  DynamicImprovement?: "Default" | "Full" | "HighConfidence" | "None";
  Namespaces?: Namespaces;
  Entities?: Entities;
  Relationships?: Relationships;
  GlobalSubstitutions?: GlobalSubstitutions;
}
/**
 * Additional linguistic schemas referenced by objects within this linguistic schema
 */
export interface Namespaces {
  [k: string]: LsdlReference;
}
/**
 * A reference to an additional linguistic schema.
 *
 * This interface was referenced by `Namespaces`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export interface LsdlReference {}
/**
 * The entities in the linguistic schema.
 */
export interface Entities {
  [k: string]: Entity;
}
/**
 * An entity in the linguistic schema
 *
 * This interface was referenced by `Entities`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export interface Entity {
  /**
   * The conceptual model object which represents the entity
   */
  Binding: ConceptualEntityBinding | ConceptualPropertyBinding | HierarchyBinding | HierarchyLevelBinding;
  /**
   * The state of the entity
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
  /**
   * The weight to apply to this entity
   */
  Weight?: number;
  Words?: Words;
  /**
   * The overall semantic category of the entity
   */
  SemanticType?: "Person" | "Animate" | "Inanimate" | "Location" | "Time";
  Instances?: Instances;
}
/**
 * A term in the linguistic schema
 */
export interface FullWord {
  [k: string]: WordProperties;
}
/**
 * Properties of the term
 *
 * This interface was referenced by `FullWord`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export interface WordProperties {
  /**
   * The part of speech of the term
   */
  Type?: "Noun";
  /**
   * The state of the term
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
  /**
   * The weight to apply to the term
   */
  Weight?: number;
}
/**
 * Defines how instance values from the model are recognized
 */
export interface Instances {
  Synonyms?: InstanceSynonyms;
  Weights?: InstanceWeights;
}
/**
 * Defines a set of values which are synonyms of instances of this entity.
 */
export interface InstanceSynonyms {
  /**
   * A conceptual property, column, or measure in the conceptual model to which a linguistic schema object is bound.
   */
  SynonymBinding:
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the column
         */
        Column: string;
      }
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the measure
         */
        Measure: string;
      }
    | {
        /**
         * The name of the conceptual entity containing the property
         */
        ConceptualEntity: string;
        /**
         * The name of the property containing the variation set that contains the property
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the property
         */
        VariationSet?: string;
        /**
         * The name of the property
         */
        ConceptualProperty: string;
      };
  /**
   * A conceptual property, column, or measure in the conceptual model to which a linguistic schema object is bound.
   */
  ValueBinding:
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the column
         */
        Column: string;
      }
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the measure
         */
        Measure: string;
      }
    | {
        /**
         * The name of the conceptual entity containing the property
         */
        ConceptualEntity: string;
        /**
         * The name of the property containing the variation set that contains the property
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the property
         */
        VariationSet?: string;
        /**
         * The name of the property
         */
        ConceptualProperty: string;
      };
  /**
   * The state of the instance synonyms
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
}
/**
 * Reference to property in the model which contains the weight to apply to instances of this entity.
 */
export interface InstanceWeights {
  /**
   * A conceptual property, column, or measure in the conceptual model to which a linguistic schema object is bound.
   */
  Binding:
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the column
         */
        Column: string;
      }
    | {
        /**
         * The name of the table containing the column or measure
         */
        Table: string;
        /**
         * The name of the property containing the variation set that contains the column or measure
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the column or measure
         */
        VariationSet?: string;
        /**
         * The name of the measure
         */
        Measure: string;
      }
    | {
        /**
         * The name of the conceptual entity containing the property
         */
        ConceptualEntity: string;
        /**
         * The name of the property containing the variation set that contains the property
         */
        VariationSource?: string;
        /**
         * The name of the variation set that contains the property
         */
        VariationSet?: string;
        /**
         * The name of the property
         */
        ConceptualProperty: string;
      };
}
/**
 * The relationships in the linguistic schema.
 */
export interface Relationships {
  [k: string]: Relationship;
}
/**
 * A relationship in the linguistic schema
 *
 * This interface was referenced by `Relationships`'s JSON-Schema definition
 * via the `patternProperty` "^.+$".
 */
export interface Relationship {
  /**
   * The conceptual model object which embodies the relationship
   */
  Binding?: ConceptualEntityBinding;
  /**
   * The state of the relationship
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
  /**
   * The weight to apply to this relationship
   */
  Weight?: number;
  Roles?: Roles;
  SemanticSlots?: SemanticSlots;
  Conditions?: Conditions;
  Phrasings?: Phrasings;
}
/**
 * References to linguistic entities which participate in the relationship
 */
export interface Roles {
  [k: string]: Role;
}
/**
 * A role in a linguistic relationship.
 */
export interface FullRole {
  /**
   * The linguistic entity which is the target of the role
   */
  Target: Identifier | FullEntityReference;
  Nouns?: Words1;
  /**
   * A role which indicates the quantity of this role's entity which participates in the relationship
   */
  Quantity?: Identifier | FullRoleReference;
  /**
   * A role which indicates the amount of this role's entity which participates in the relationship
   */
  Amount?: Identifier | FullRoleReference;
}
/**
 * A reference to an entity in a linguistic relationship
 */
export interface FullEntityReference {
  /**
   * Identifier for a linguistic schema object
   */
  Entity: string;
  /**
   * Identifier for a linguistic schema object
   */
  Namespace?: string;
}
/**
 * A reference to a role in a linguistic relationship
 */
export interface FullRoleReference {
  Role: Identifier;
}
/**
 * Defines how roles fill common semantic slots in the relationship
 */
export interface SemanticSlots {
  /**
   * A role which indicates where the relationship takes place
   */
  Where?: Identifier | FullRoleReference;
  /**
   * A role which indicates when the relationship takes place
   */
  When?: Identifier | FullRoleReference;
  /**
   * A role which indicates the number of times the relationship occurred
   */
  Occurrences?: Identifier | FullRoleReference;
}
/**
 * A filter on a relationship that defines the circumstances under which a row in the semantic model represents an instance of the relationship
 */
export interface Condition {
  /**
   * A role in the relationship to compare to the value
   */
  Target: Identifier | FullRoleReference;
  /**
   * The operator with which to compare the value and the role
   */
  Operator: "Equals" | "GreaterThan" | "LessThan" | "GreaterThanOrEquals" | "LessThanOrEquals";
  /**
   * The value to which the role is compared
   */
  Value:
    | {
        /**
         * A text value to use in a condition
         */
        Text: NullableTextValue | [NullableTextValue];
      }
    | {
        /**
         * A number value to use in a condition
         */
        Number: NullableNumberValue | [NullableNumberValue];
      }
    | {
        /**
         * A Boolean value to use in a condition
         */
        Boolean: NullableBooleanValue | [NullableBooleanValue];
      }
    | TextValues
    | NumberValues
    | BooleanValues
    | null;
}
/**
 * An attribute phrasing on a linguistic relationship
 */
export interface AttributePhrasing {
  Attribute: AttributePhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of an attribute phrasing
 */
export interface AttributePhrasingProperties {
  /**
   * The entity which is the subject of the phrasing
   */
  Subject: Identifier | FullRoleReference;
  /**
   * The entity which is the object of the phrasing
   */
  Object: Identifier | FullRoleReference;
  PrepositionalPhrases?: PrepPhrases;
}
/**
 * A prepositional phrase used in a phrasing
 */
export interface PrepPhrase {
  Prepositions: Words2;
  /**
   * The entity which is the object of the prepositional phrase
   */
  Object: Identifier | FullRoleReference;
}
/**
 * A name phrasing on a linguistic relationship
 */
export interface NamePhrasing {
  Name: NamePhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a name phrasing
 */
export interface NamePhrasingProperties {
  /**
   * The entity which is the subject of the phrasing
   */
  Subject: Identifier | FullRoleReference;
  /**
   * The entity which is the name of the Subject
   */
  Name: Identifier | FullRoleReference;
}
/**
 * An adjective phrasing on a linguistic relationship
 */
export interface AdjectivePhrasing {
  Adjective: AdjectivePhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * A dynamic adjective phrasing on a linguistic relationship
 */
export interface DynamicAdjectivePhrasing {
  DynamicAdjective: DynamicAdjectivePhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a dynamic adjective phrasing
 */
export interface DynamicAdjectivePhrasingProperties {
  /**
   * The entity which is described via an adjective
   */
  Subject: Identifier | FullRoleReference;
  /**
   * The column entity (or table entity with a name phrasing) which is used to describe the Subject
   */
  Adjective: Identifier | FullRoleReference;
  PrepositionalPhrases?: PrepPhrases3;
}
/**
 * A noun phrasing on a linguistic relationship
 */
export interface NounPhrasing {
  Noun: NounPhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a noun phrasing
 */
export interface NounPhrasingProperties {
  /**
   * The entity which is described via a noun
   */
  Subject: Identifier | FullRoleReference;
  Nouns: Words6;
  PrepositionalPhrases?: PrepPhrases4;
}
/**
 * A dynamic noun phrasing on a linguistic relationship
 */
export interface DynamicNounPhrasing {
  DynamicNoun: DynamicNounPhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a dynamic noun phrasing
 */
export interface DynamicNounPhrasingProperties {
  /**
   * The entity which is described via a noun
   */
  Subject: Identifier | FullRoleReference;
  /**
   * The column entity (or table entity with a name phrasing) which is the used to describe the Subject
   */
  Noun: Identifier | FullRoleReference;
  PrepositionalPhrases?: PrepPhrases5;
}
/**
 * A preposition phrasing on a linguistic relationship
 */
export interface PrepositionPhrasing {
  Preposition: PrepositionPhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a preposition phrasing
 */
export interface PrepositionPhrasingProperties {
  /**
   * The entity which is the subject of the prepositional phrase
   */
  Subject: Identifier | FullRoleReference;
  Prepositions: Words7;
  /**
   * The entity which is the object of the prepositional phrase
   */
  Object: Identifier | FullRoleReference;
  PrepositionalPhrases?: PrepPhrases6;
}
/**
 * A verb phrasing on a linguistic relationship
 */
export interface VerbPhrasing {
  Verb: VerbPhrasingProperties;
  State?: unknown;
  Weight?: unknown;
}
/**
 * Properties of a verb phrasing
 */
export interface VerbPhrasingProperties {
  /**
   * The entity which is the subject of the verb
   */
  Subject?: Identifier | FullRoleReference;
  Verbs: Words8;
  /**
   * The entity which is the indirect object of the verb
   */
  IndirectObject?: Identifier | FullRoleReference;
  /**
   * The entity which is the direct object of the verb
   */
  Object?: Identifier | FullRoleReference;
  PrepositionalPhrases?: PrepPhrases7;
}
export interface SharedPhrasingProperties {
  /**
   * The state of the phrasing
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
  /**
   * The weight to apply to the phrasing
   */
  Weight?: number;
  [k: string]: unknown;
}
/**
 * A global text substitution in the linguistic schema.
 */
export interface GlobalSubstitution {
  [k: string]: GlobalSubstitutionProperties;
}
export interface FullGlobalSubstitutionProperties {
  /**
   * The sequence of words to substitute into the utterance.
   */
  Substitute: string;
  /**
   * The state of the global substitution
   */
  State?: "UserAuthored" | "Generated" | "Deleted";
}
