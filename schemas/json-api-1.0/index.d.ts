/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This is a schema for responses in the JSON API format. For more, see http://jsonapi.org
 */
export type JSONAPISchema = Success | Failure | Info;
/**
 * The document's "primary data" is a representation of the resource or collection of resources targeted by a request.
 */
export type Data = Resource | Resource[] | null;
/**
 * A link **MUST** be represented as either: a string containing the link's URL or a link object.
 */
export type Link =
  | string
  | {
      /**
       * A string containing the link's URL.
       */
      href: string;
      meta?: Meta;
      [k: string]: any;
    };

export interface Success {
  data: Data;
  /**
   * To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called "compound documents".
   */
  included?: Resource[];
  meta?: Meta;
  /**
   * Link members related to the primary data.
   */
  links?: Links & Pagination;
  jsonapi?: Jsonapi;
}
/**
 * "Resource objects" appear in a JSON API document to represent resources.
 */
export interface Resource {
  type: string;
  id: string;
  attributes?: Attributes;
  relationships?: Relationships;
  links?: Links;
  meta?: Meta;
}
/**
 * Members of the attributes object ("attributes") represent information about the resource object in which it's defined.
 */
export interface Attributes {
  /**
   * Attributes may contain any valid JSON value.
   *
   * This interface was referenced by `Attributes`'s JSON-Schema definition
   * via the `patternProperty` "^(?!relationships$|links$)\w[-\w_]*$".
   */
  [k: string]: {
    [k: string]: any;
  };
}
/**
 * Members of the relationships object ("relationships") represent references from the resource object in which it's defined to other resource objects.
 */
export interface Relationships {
  /**
   * This interface was referenced by `Relationships`'s JSON-Schema definition
   * via the `patternProperty` "^\w[-\w_]*$".
   */
  [k: string]: {
    [k: string]: any;
  };
}
/**
 * A resource object **MAY** contain references to other resource objects ("relationships"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.
 */
export interface Links {
  /**
   * A `self` member, whose value is a URL for the relationship itself (a "relationship URL"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.
   */
  self?: string;
  related?: Link;
  [k: string]: any;
}
/**
 * Non-standard meta-information that can not be represented as an attribute or relationship.
 */
export interface Meta {
  [k: string]: any;
}
export interface Pagination {
  /**
   * The first page of data
   */
  first?: string | null;
  /**
   * The last page of data
   */
  last?: string | null;
  /**
   * The previous page of data
   */
  prev?: string | null;
  /**
   * The next page of data
   */
  next?: string | null;
  [k: string]: any;
}
/**
 * An object describing the server's implementation
 */
export interface Jsonapi {
  version?: string;
  meta?: Meta;
}
export interface Failure {
  errors: Error[];
  meta?: Meta;
  jsonapi?: Jsonapi;
}
export interface Error {
  /**
   * A unique identifier for this particular occurrence of the problem.
   */
  id?: string;
  links?: Links;
  /**
   * The HTTP status code applicable to this problem, expressed as a string value.
   */
  status?: string;
  /**
   * An application-specific error code, expressed as a string value.
   */
  code?: string;
  /**
   * A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.
   */
  title?: string;
  /**
   * A human-readable explanation specific to this occurrence of the problem.
   */
  detail?: string;
  source?: {
    /**
     * A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].
     */
    pointer?: string;
    /**
     * A string indicating which query parameter caused the error.
     */
    parameter?: string;
    [k: string]: any;
  };
  meta?: Meta;
}
export interface Info {
  meta: Meta;
  links?: Links;
  jsonapi?: Jsonapi;
}
