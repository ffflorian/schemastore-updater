/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface JSONSchemaForVisualStudioManifestExtensions {
  /**
   * A list of file associations (protocol handlers).
   */
  fileAssociations?: FileAssociation[];
  /**
   * A list of URL associations (protocol handlers).
   */
  urlAssociations?: UrlAssociation[];
  /**
   * A list of URL associations (protocol handlers).
   */
  progIds?: ProgIds[];
  [k: string]: any;
}
export interface FileAssociation {
  /**
   * Content type of the file with this extension.
   */
  contentType?: string;
  /**
   * The registry path to where this file association should be registered with default program.
   */
  defaultProgramRegistrationPath?: string;
  /**
   * The file extension.
   */
  extension: string;
  /**
   * Indicates whether this file association is used for display icons only.
   */
  isIconOnly?: boolean;
  /**
   * Perceived type of the file with this extension.
   */
  perceivedType?: string;
  /**
   * The matching /progId/id that's associated with this file extension.
   */
  progId: string;
  [k: string]: any;
}
export interface UrlAssociation {
  /**
   * The registry path to where this url association should be registered with default program.
   */
  defaultProgramRegistrationPath: string;
  /**
   * The name of the association.
   */
  displayName?: string;
  /**
   * Id for localization purpose only.
   */
  locId?: string;
  /**
   * The matching /progId/id that's associated with this protocol.
   */
  progId: string;
  /**
   * The URL protocol to associate.
   */
  protocol: string;
  [k: string]: any;
}
export interface ProgIds {
  /**
   * Indicates whether silent default takeover is allowed.
   */
  allowSilentDefaultTakeOver?: boolean;
  /**
   * Indicates if extensions should always be shown in Windows Explorer.
   */
  alwaysShowExtension?: boolean;
  /**
   * App user model ID for taskbar and jump list grouping.
   */
  appUserModelId?: string;
  /**
   * Arguments to pass to the executable.
   */
  arguments?: string;
  /**
   * CLSID for the progId
   */
  clsid?: string;
  /**
   * Indicates whether application needs to support DDE.
   */
  dde?: boolean;
  /**
   * DDE application name.
   */
  ddeApplication?: string;
  /**
   * DDE topic name.
   */
  ddeTopic?: string;
  /**
   * Default icon resource DLL path.
   */
  defaultIconPath?: string;
  /**
   * Default icon position.
   */
  defaultIconPosition?: number;
  /**
   * The name of progId.
   */
  displayName?: string;
  /**
   * Icon handler GUID.
   */
  iconHandler?: string;
  /**
   * The unique identifier.
   */
  id: string;
  /**
   * Id for localization purpose only.
   */
  locId?: string;
  /**
   * The path to the executable.
   */
  path?: string;
  [k: string]: any;
}
